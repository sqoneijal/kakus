{
  "version": 3,
  "sources": ["../../src/page/ControlPanel/Admin/Responden/Detail/Context.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { ButtonGroup, Card, Col, Row } from \"react-bootstrap\";\nimport { Bars } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst BiodataResponden = React.lazy(() => import(\"./BiodataResponden\"));\nconst Koordinat = React.lazy(() => import(\"./Koordinat\"));\nconst KepemilikanRumah = React.lazy(() => import(\"./KepemilikanRumah\"));\nconst FormsPenampunganTinja = React.lazy(() => import(\"./FormsPenampunganTinja\"));\nconst FormsVolumeSeptiktank = React.lazy(() => import(\"./FormsVolumeSeptiktank\"));\nconst VolumeSeptiktank = React.lazy(() => import(\"./VolumeSeptiktank\"));\nconst PenampunganTinja = React.lazy(() => import(\"./PenampunganTinja\"));\n\nlet map = null;\n\nconst Context = ({ daftarKepemilikanRumah }) => {\n   const { module } = useSelector((e) => e.redux);\n   const { openDetail, detailContent, volumeSeptiktank } = module;\n   const dispatch = useDispatch();\n   const cardBody = useRef(null);\n\n   // bool\n   const [isLoading, setIsLoading] = useState(true);\n\n   const handleClose = () => {\n      map.remove();\n      dispatch(setModule({ ...module, openDetail: false, detailContent: {} }));\n   };\n\n   const getData = (id_responden) => {\n      const formData = { id_responden };\n\n      setIsLoading(true);\n      const fetch = h.post(`/getdetail`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         dispatch(setModule({ ...module, ...data }));\n      });\n      fetch.finally(() => {\n         setIsLoading(false);\n      });\n   };\n\n   useLayoutEffect(() => {\n      if (openDetail && h.objLength(detailContent)) {\n         getData(h.parse(\"id\", detailContent));\n\n         const latitude = h.toInt(h.parse(\"latitude\", detailContent));\n         const longitude = h.toInt(h.parse(\"longitude\", detailContent));\n\n         map = L.map(\"maps-detail-responden\").setView([latitude, longitude], 100);\n\n         L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\n\n         const markerIcon = L.icon({\n            iconUrl: \"/bundle/marker-icon.png\",\n            iconSize: [40, 40],\n         });\n         L.marker([latitude, longitude], { icon: markerIcon }).addTo(map).bindPopup(h.parse(\"nama_lengkap\", detailContent)).openPopup();\n      }\n      return () => {};\n   }, [openDetail, detailContent]);\n\n   const props = { daftarKepemilikanRumah, getData };\n\n   return (\n      <React.Fragment>\n         {openDetail && <div className=\"drawer-overlay\" />}\n         <div className={`bg-white drawer drawer-start ${openDetail ? \"drawer-on\" : \"\"}`} style={{ width: \"100%\" }}>\n            <Card className=\"rounded-0 w-100\">\n               <Card.Header className=\"pe-5\">\n                  <div className=\"card-title\">\n                     <div className=\"d-flex justify-content-center flex-column me-3\">\n                        <span className=\"fs-4 fw-bold text-gray-900 text-hover-primary me-1 lh-1\">Detail Responden</span>\n                     </div>\n                  </div>\n                  <div className=\"card-toolbar\">\n                     <button className=\"btn btn-sm btn-icon btn-active-light-primary\" onClick={handleClose}>\n                        <i className=\"ki-duotone ki-cross fs-2\">\n                           <span className=\"path1\" />\n                           <span className=\"path2\" />\n                        </i>\n                     </button>\n                  </div>\n               </Card.Header>\n               <Card.Body className=\"hover-scroll-overlay-y\" id=\"card-body-responden\" ref={cardBody}>\n                  <Row>\n                     <Col>\n                        {!isLoading && (\n                           <React.Suspense\n                              fallback={\n                                 <Bars\n                                    visible={true}\n                                    color=\"#4fa94d\"\n                                    radius=\"9\"\n                                    wrapperStyle={{\n                                       alignItems: \"center\",\n                                       display: \"flex\",\n                                       justifyContent: \"center\",\n                                    }}\n                                    wrapperClass=\"page-loader flex-column bg-dark bg-opacity-25\"\n                                 />\n                              }>\n                              <BiodataResponden {...props} />\n                              <Koordinat />\n                              <KepemilikanRumah />\n                              <VolumeSeptiktank />\n                              <PenampunganTinja {...props} />\n                              <FormsPenampunganTinja />\n                              <FormsVolumeSeptiktank />\n                           </React.Suspense>\n                        )}\n                     </Col>\n                     <Col id=\"maps-detail-responden\" style={{ height: cardBody.current ? cardBody.current.clientHeight : \"auto\" }} />\n                  </Row>\n               </Card.Body>\n               <Card.Footer className=\"text-end\">\n                  <ButtonGroup>\n                     {h.buttons(`Perbaharui Volume Septiktank`, false, {\n                        onClick: () => dispatch(setModule({ ...module, openFormsVolumeSeptiktank: true })),\n                     })}\n                     {h.parse(\"id\", volumeSeptiktank) &&\n                        h.buttons(`Tambah Penampungan Tinja`, false, {\n                           variant: \"success\",\n                           onClick: () => dispatch(setModule({ ...module, openFormsPenampunganTinja: true, pageType: \"insert\" })),\n                        })}\n                  </ButtonGroup>\n               </Card.Footer>\n            </Card>\n         </div>\n      </React.Fragment>\n   );\n};\nexport default Context;\n"],
  "mappings": "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",
  "names": ["import_pace_min", "import_react", "BiodataResponden", "React", "Koordinat", "KepemilikanRumah", "FormsPenampunganTinja", "FormsVolumeSeptiktank", "VolumeSeptiktank", "PenampunganTinja", "map", "Context", "daftarKepemilikanRumah", "module", "useSelector", "e", "openDetail", "detailContent", "volumeSeptiktank", "dispatch", "useDispatch", "cardBody", "isLoading", "setIsLoading", "handleClose", "setModule", "getData", "id_responden", "formData", "fetch", "post", "res", "data", "parse", "notification", "objLength", "latitude", "toInt", "longitude", "markerIcon", "props", "Card_default", "Row_default", "Col_default", "$7dd1b251b360e95a$export$fbc7d6f7dd821b47", "ButtonGroup_default", "buttons", "Context_default"]
}
