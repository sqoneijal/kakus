{
  "version": 3,
  "sources": ["../../src/page/ControlPanel/Admin/Penampungan/Peta.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { Card, Col, Row, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Each } from \"~/Each\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nlet map = null;\n\nconst Peta = () => {\n   const { module, filter } = useSelector((e) => e.redux);\n   const { openPeta } = module;\n   const dispatch = useDispatch();\n   const cardBody = useRef(null);\n\n   // bool\n   const [isLoading, setIsLoading] = useState(true);\n\n   // array\n   const [listContent, setListContent] = useState([]);\n\n   // string\n   const [cardHeight, setCardHeight] = useState(0);\n\n   useLayoutEffect(() => {\n      if (cardBody.current) {\n         setCardHeight(cardBody.current.clientHeight);\n      }\n      return () => {};\n   }, [cardBody]);\n\n   const handleClose = () => {\n      map.remove();\n      setListContent([]);\n      dispatch(setModule({ ...module, openPeta: false }));\n   };\n\n   const getPeta = (page = 0) => {\n      const formData = { ...filter, page };\n\n      const fetch = h.get(`/getpeta?${h.serialize(formData)}`);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         if (h.arrLength(data)) {\n            setListContent((prev) => prev.concat(data));\n            getPeta(page + 1);\n         } else {\n            setIsLoading(false);\n         }\n      });\n   };\n\n   useLayoutEffect(() => {\n      if (openPeta) getPeta();\n      return () => {};\n   }, [openPeta]);\n\n   const renderTooltip = (data) => {\n      return `<div class=\"row\">\n         <h4>Volume Septiktank [${h.parse(\"nama_lengkap\", data)}]</h4>\n         <div class=\"col\">\n            <div class=\"mb-2 row\">\n               <div class=\"fw-semibold text-muted col-sm-12\">Panjang</div>\n               <div class=\"col-md-12 col-sm-12\"><span class=\"fw-bold fs-6 text-gray-800\">${h.parse(\"panjang\", data)} m2</span></div>\n            </div>\n            <div class=\"mb-2 row\">\n               <div class=\"fw-semibold text-muted col-sm-12\">Lebar</div>\n               <div class=\"col-md-12 col-sm-12\"><span class=\"fw-bold fs-6 text-gray-800\">${h.parse(\"lebar\", data)} m2</span></div>\n            </div>\n            <div class=\"mb-2 row\">\n               <div class=\"fw-semibold text-muted col-sm-12\">Jenis</div>\n               <div class=\"col-md-12 col-sm-12\"><span class=\"fw-bold fs-6 text-gray-800\">${h.parse(\"jenis_septiktank\", data)}</span></div>\n            </div>\n         </div>\n         <div class=\"col\">\n            <div class=\"mb-2 row\">\n               <div class=\"fw-semibold text-muted col-sm-12\">Kedalaman</div>\n               <div class=\"col-md-12 col-sm-12\"><span class=\"fw-bold fs-6 text-gray-800\">${h.parse(\"kedalaman\", data)} m2</span></div>\n            </div>\n            <div class=\"mb-2 row\">\n               <div class=\"fw-semibold text-muted col-sm-12\">Diameter</div>\n               <div class=\"col-md-12 col-sm-12\"><span class=\"fw-bold fs-6 text-gray-800\">${h.parse(\"diameter_tabung\", data)} m2</span></div>\n            </div>\n         </div>\n      </div>`;\n   };\n\n   useLayoutEffect(() => {\n      if (!isLoading && h.arrLength(listContent)) {\n         const firstLat = h.toInt(h.parse(\"latitude\", listContent[0]));\n         const firstLong = h.toInt(h.parse(\"longitude\", listContent[0]));\n\n         map = L.map(\"maps\").setView([firstLat, firstLong], 15);\n         L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\n\n         const markerWarning = L.icon({\n            iconUrl: \"/bundle/marker-icon-warning.png\",\n            iconSize: [40, 40],\n         });\n\n         const markerSuccess = L.icon({\n            iconUrl: \"/bundle/marker-icon-success.png\",\n            iconSize: [40, 40],\n         });\n\n         const markerDanger = L.icon({\n            iconUrl: \"/bundle/marker-icon-success.png\",\n            iconSize: [40, 40],\n         });\n\n         const icon = {\n            \"\": markerWarning,\n            1: markerSuccess,\n            2: markerDanger,\n         };\n\n         listContent.forEach((row) => {\n            const latitude = h.toInt(h.parse(\"latitude\", row));\n            const longitude = h.toInt(h.parse(\"longitude\", row));\n\n            L.marker([latitude, longitude], { icon: icon[h.parse(\"status\", row)] })\n               .bindPopup(renderTooltip(row))\n               .addTo(map);\n         });\n      }\n      return () => {};\n   }, [listContent, isLoading]);\n\n   const statusPenyedotan = {\n      \"\": <span className=\"badge badge-warning\">Belum dilakukan</span>,\n      1: <span className=\"badge badge-success\">Sudah dilakukan</span>,\n      2: <span className=\"badge badge-danger\">Tolak</span>,\n   };\n\n   return (\n      <React.Fragment>\n         {openPeta && <div className=\"drawer-overlay\" />}\n         <div className={`bg-white drawer drawer-start ${openPeta ? \"drawer-on\" : \"\"}`} style={{ width: window.innerWidth }}>\n            <Card className=\"rounded-0 w-100\">\n               <Card.Header className=\"pe-5\">\n                  <div className=\"card-title\">\n                     <div className=\"d-flex justify-content-center flex-column me-3\">\n                        <span className=\"fs-4 fw-bold text-gray-900 text-hover-primary me-1 lh-1\">Info Geografis</span>\n                     </div>\n                  </div>\n                  <div className=\"card-toolbar\">\n                     <button className=\"btn btn-sm btn-icon btn-active-light-primary\" onClick={handleClose}>\n                        <i className=\"ki-duotone ki-cross fs-2\">\n                           <span className=\"path1\" />\n                           <span className=\"path2\" />\n                        </i>\n                     </button>\n                  </div>\n               </Card.Header>\n               <Card.Body className=\"hover-scroll-overlay-y\" ref={cardBody} style={{ height: cardHeight }}>\n                  {!isLoading && h.arrLength(listContent) && (\n                     <Row>\n                        <Col id=\"maps\" style={{ height: cardHeight }} />\n                        <Col md={4} className=\"hover-scroll-overlay-y\" style={{ height: cardHeight }}>\n                           <Table responsive hover className=\"align-middle table-row-dashed fs-6\" size=\"sm\">\n                              <thead>\n                                 <tr className=\"text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0\">\n                                    <th>nama responden</th>\n                                    <th>nik responden</th>\n                                    <th>status penyedotan</th>\n                                 </tr>\n                              </thead>\n                              <tbody className=\"text-gray-600 fw-semibold\">\n                                 <Each\n                                    of={listContent}\n                                    render={(row) => (\n                                       <tr\n                                          style={{ cursor: \"pointer\" }}\n                                          onClick={() => {\n                                             const latitude = h.toInt(h.parse(\"latitude\", row));\n                                             const longitude = h.toInt(h.parse(\"longitude\", row));\n\n                                             map.setView([latitude, longitude], 50);\n                                          }}>\n                                          <td>{h.parse(\"nama_lengkap\", row)}</td>\n                                          <td>{h.parse(\"nik\", row)}</td>\n                                          <td>{statusPenyedotan[h.parse(\"status\", row)]}</td>\n                                       </tr>\n                                    )}\n                                 />\n                              </tbody>\n                           </Table>\n                        </Col>\n                     </Row>\n                  )}\n               </Card.Body>\n            </Card>\n         </div>\n      </React.Fragment>\n   );\n};\nexport default Peta;\n"],
  "mappings": "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",
  "names": ["import_leaflet", "import_react", "map", "Peta", "module", "filter", "useSelector", "openPeta", "dispatch", "useDispatch", "cardBody", "isLoading", "setIsLoading", "listContent", "setListContent", "cardHeight", "setCardHeight", "handleClose", "setModule", "getPeta", "page", "formData", "get", "serialize", "res", "data", "parse", "notification", "arrLength", "prev", "renderTooltip", "firstLat", "toInt", "firstLong", "markerWarning", "markerSuccess", "markerDanger", "icon", "row", "latitude", "longitude", "statusPenyedotan", "React", "Card_default", "Row_default", "Col_default", "Table_default", "Each", "Peta_default"]
}
