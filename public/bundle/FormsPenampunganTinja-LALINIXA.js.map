{
  "version": 3,
  "sources": ["../../src/page/ControlPanel/Admin/Responden/Detail/FormsPenampunganTinja.jsx"],
  "sourcesContent": ["import moment from \"moment\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { ButtonGroup, Card, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport wnumb from \"wnumb\";\nimport * as h from \"~/Helpers\";\nimport { setModule } from \"~/redux\";\n\nconst FormsPenampunganTinja = () => {\n   const { module, init } = useSelector((e) => e.redux);\n   const { openFormsPenampunganTinja, detailContent, volumeSeptiktank, pageType, detailPenampunganTinja } = module;\n   const dispatch = useDispatch();\n\n   // bool\n   const [isSubmit, setIsSubmit] = useState(false);\n\n   // object\n   const [errors, setErrors] = useState({});\n   const [input, setInput] = useState({});\n\n   useLayoutEffect(() => {\n      if (pageType === \"update\" && h.objLength(detailPenampunganTinja)) setInput({ ...detailPenampunganTinja });\n      return () => {};\n   }, [pageType, detailPenampunganTinja]);\n\n   const clearProps = () => {\n      setErrors({});\n      setInput({});\n   };\n\n   const handleClose = () => {\n      clearProps();\n      dispatch(setModule({ ...module, openFormsPenampunganTinja: false, pageType: \"\", detailPenampunganTinja: {} }));\n   };\n\n   const submit = (e) => {\n      e.preventDefault();\n      const formData = {\n         pageType,\n         user_modified: h.parse(\"username\", init),\n         id_responden: h.parse(\"id\", detailContent),\n         id_volume_septiktank: h.parse(\"id\", volumeSeptiktank),\n      };\n      Object.keys(input).forEach((key) => (formData[key] = input[key]));\n\n      setIsSubmit(true);\n      const fetch = h.post(`/submitpenampungantinja`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         setErrors(data.errors);\n         h.notification(data.status, data.msg_response);\n\n         if (!data.status) return;\n\n         clearProps();\n         dispatch(setModule({ ...module, ...data.content, openFormsPenampunganTinja: false, pageType: \"\", detailPenampunganTinja: {} }));\n      });\n      fetch.finally(() => {\n         setIsSubmit(false);\n      });\n   };\n\n   return (\n      <React.Fragment>\n         {openFormsPenampunganTinja && <div className=\"drawer-overlay\" style={{ zIndex: 9999 }} />}\n         <div\n            className={`bg-white drawer drawer-end ${openFormsPenampunganTinja ? \"drawer-on\" : \"\"}`}\n            style={{ width: window.innerWidth / 2, zIndex: 9999 }}>\n            <Card className=\"rounded-0 w-100\">\n               <Card.Header className=\"pe-5\">\n                  <div className=\"card-title\">\n                     <div className=\"d-flex justify-content-center flex-column me-3\">\n                        <span className=\"fs-4 fw-bold text-gray-900 text-hover-primary me-1 lh-1\">\n                           {h.pageType(pageType)} Keterangan Penampungan Tinja\n                        </span>\n                     </div>\n                  </div>\n                  <div className=\"card-toolbar\">\n                     <button className=\"btn btn-sm btn-icon btn-active-light-primary\" onClick={handleClose}>\n                        <i className=\"ki-duotone ki-cross fs-2\">\n                           <span className=\"path1\" />\n                           <span className=\"path2\" />\n                        </i>\n                     </button>\n                  </div>\n               </Card.Header>\n               <Card.Body className=\"hover-scroll-overlay-y\">\n                  <Row>\n                     <Col>\n                        {h.form_text(\n                           `Tahun Penyedotan`,\n                           `kala_penyedotan`,\n                           {\n                              onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })),\n                              value: h.parse(`kala_penyedotan`, input),\n                           },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                     <Col>\n                        {h.form_text(\n                           `Tahun Pembangunan`,\n                           `pembangunan`,\n                           {\n                              onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })),\n                              value: h.parse(`pembangunan`, input),\n                           },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                     <Col>\n                        {h.form_text(\n                           `Harga Penyedotan`,\n                           `harga_penyedotan`,\n                           {\n                              onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value.replace(/\\./g, \"\") })),\n                              value: wnumb({ thousand: \".\" }).to(h.toInt(h.parse(`harga_penyedotan`, input))),\n                           },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                  </Row>\n                  <Row>\n                     <Col>\n                        {h.form_text(`Tingkat Keamanan`, `tingkat_keamanan`, {\n                           onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })),\n                           value: h.parse(`tingkat_keamanan`, input),\n                        })}\n                     </Col>\n                  </Row>\n                  <Row>\n                     <Col>\n                        {h.date_picker(\n                           \"Tanggal Penyedotan Terakhir\",\n                           \"tanggal_penyedotan_terakhir\",\n                           {\n                              onChange: ([date]) => setInput((prev) => ({ ...prev, tanggal_penyedotan_terakhir: moment(date).format(\"YYYY-MM-DD\") })),\n                              value: h.parse(\"tanggal_penyedotan_terakhir\", input),\n                           },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                     <Col>\n                        {h.date_picker(\n                           \"Tanggal Rencana Penyedotan\",\n                           \"tanggal_rencana_penyedotan\",\n                           {\n                              onChange: ([date]) => setInput((prev) => ({ ...prev, tanggal_rencana_penyedotan: moment(date).format(\"YYYY-MM-DD\") })),\n                              value: h.parse(\"tanggal_rencana_penyedotan\", input),\n                           },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                  </Row>\n               </Card.Body>\n               <Card.Footer className=\"text-end\">\n                  <ButtonGroup>\n                     {h.buttons(`Simpan`, isSubmit, {\n                        onClick: isSubmit ? null : submit,\n                     })}\n                     {h.buttons(`Batal`, false, {\n                        variant: \"danger\",\n                        onClick: () => handleClose(),\n                     })}\n                  </ButtonGroup>\n               </Card.Footer>\n            </Card>\n         </div>\n      </React.Fragment>\n   );\n};\nexport default FormsPenampunganTinja;\n"],
  "mappings": "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",
  "names": ["import_leaflet", "import_moment", "import_react", "import_wnumb", "FormsPenampunganTinja", "module", "init", "useSelector", "openFormsPenampunganTinja", "detailContent", "volumeSeptiktank", "pageType", "detailPenampunganTinja", "dispatch", "useDispatch", "isSubmit", "setIsSubmit", "errors", "setErrors", "input", "setInput", "objLength", "clearProps", "handleClose", "setModule", "submit", "formData", "parse", "key", "fetch", "post", "res", "data", "notification", "React", "Card_default", "Row_default", "Col_default", "form_text", "prev", "wnumb", "toInt", "date_picker", "date", "moment", "ButtonGroup_default", "buttons", "FormsPenampunganTinja_default"]
}
