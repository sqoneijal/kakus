{
  "version": 3,
  "sources": ["../../src/page/ControlPanel/Admin/Profile/Overview.jsx"],
  "sourcesContent": ["import React, { useLayoutEffect, useState } from \"react\";\nimport { ButtonGroup, Card, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as h from \"~/Helpers\";\nimport { setInit, setModule } from \"~/redux\";\nimport { Show } from \"~/Show\";\n\nconst Overview = () => {\n   const { init, module } = useSelector((e) => e.redux);\n   const { openForms } = module;\n   const dispatch = useDispatch();\n\n   // bool\n   const [isSubmit, setIsSubmit] = useState(false);\n\n   // object\n   const [input, setInput] = useState({});\n   const [errors, setErrors] = useState({});\n\n   useLayoutEffect(() => {\n      if (h.objLength(init)) setInput({ ...init, old_email: h.parse(\"email\", init) });\n      return () => {};\n   }, [init]);\n\n   const submit = (e) => {\n      e.preventDefault();\n      const formData = { user_modified: h.parse(\"username\", init) };\n      Object.keys(input).forEach((key) => (formData[key] = input[key]));\n\n      setIsSubmit(true);\n      const fetch = h.post(`/submit`, formData);\n      fetch.then((res) => {\n         if (typeof res === \"undefined\") return;\n\n         const { data } = res;\n         if (typeof data.code !== \"undefined\" && h.parse(\"code\", data) !== 200) {\n            h.notification(false, h.parse(\"message\", data));\n            return;\n         }\n\n         setErrors(data.errors);\n         h.notification(data.status, data.msg_response);\n\n         if (!data.status) return;\n\n         dispatch(setInit({ ...init, ...data.content }));\n         dispatch(setModule({ ...module, openForms: false }));\n      });\n      fetch.finally(() => {\n         setIsSubmit(false);\n      });\n   };\n\n   return (\n      <Card className=\"mb-5 mb-xl-10\">\n         <Card.Header className=\"cursor-pointer\">\n            <Card.Title className=\"m-0\">\n               <h3 className=\"fw-bold m-0\">{openForms ? \"Perbaharui Profil\" : \"Detail Profil\"}</h3>\n            </Card.Title>\n            <Show>\n               <Show.When isTrue={!openForms}>\n                  {h.buttons(`Edit Profile`, false, {\n                     className: \"align-self-center\",\n                     onClick: () => dispatch(setModule({ ...module, openForms: true })),\n                  })}\n               </Show.When>\n               <Show.When isTrue={openForms}>\n                  <ButtonGroup>\n                     {h.buttons(`Batal`, false, {\n                        variant: \"danger\",\n                        className: \"align-self-center\",\n                        onClick: () => dispatch(setModule({ ...module, openForms: false })),\n                     })}\n                     {h.buttons(`Simpan`, false, {\n                        className: \"align-self-center\",\n                        onClick: isSubmit ? null : submit,\n                     })}\n                  </ButtonGroup>\n               </Show.When>\n            </Show>\n         </Card.Header>\n         <Card.Body className=\"p-9\">\n            <Show>\n               <Show.When isTrue={openForms}>\n                  <Row>\n                     <Col>\n                        {h.form_text(\n                           `Nama Lengkap`,\n                           `nama`,\n                           { onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })), value: h.parse(`nama`, input) },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                     <Col>\n                        {h.form_text(\n                           `Email`,\n                           `email`,\n                           { onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })), value: h.parse(`email`, input) },\n                           true,\n                           errors\n                        )}\n                     </Col>\n                     <Col>{h.form_text(`Username`, `username`, { disabled: true, value: h.parse(`username`, input) })}</Col>\n                  </Row>\n                  {h.form_password(`Password (Kosongkan saja jika tidak ingin mengganti dengan yang baru!)`, `password`, {\n                     onChange: (e) => setInput((prev) => ({ ...prev, [e.target.name]: e.target.value })),\n                     value: h.parse(`password`, input),\n                  })}\n               </Show.When>\n               <Show.Else>\n                  <Row className=\"mb-7\">\n                     <Col lg={4} className=\"fw-semibold text-muted\">\n                        Nama Lengkap\n                     </Col>\n                     <Col lg={8}>\n                        <span className=\"fw-bold fs-6 text-gray-800\">{h.parse(\"nama\", init)}</span>\n                     </Col>\n                  </Row>\n                  <Row className=\"mb-7\">\n                     <Col lg={4} className=\"fw-semibold text-muted\">\n                        Email\n                     </Col>\n                     <Col lg={8}>\n                        <span className=\"fw-bold fs-6 text-gray-800\">{h.parse(\"email\", init)}</span>\n                     </Col>\n                  </Row>\n                  <Row className=\"mb-7\">\n                     <Col lg={4} className=\"fw-semibold text-muted\">\n                        Username\n                     </Col>\n                     <Col lg={8}>\n                        <span className=\"fw-bold fs-6 text-gray-800\">{h.parse(\"username\", init)}</span>\n                     </Col>\n                  </Row>\n               </Show.Else>\n            </Show>\n         </Card.Body>\n      </Card>\n   );\n};\nexport default Overview;\n"],
  "mappings": "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",
  "names": ["import_leaflet", "import_react", "Overview", "init", "module", "useSelector", "e", "openForms", "dispatch", "useDispatch", "isSubmit", "setIsSubmit", "input", "setInput", "errors", "setErrors", "objLength", "parse", "submit", "formData", "key", "fetch", "post", "res", "data", "notification", "setInit", "setModule", "React", "Card_default", "Show", "buttons", "ButtonGroup_default", "Row_default", "Col_default", "form_text", "prev", "form_password", "Overview_default"]
}
